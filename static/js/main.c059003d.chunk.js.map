{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","newTodoId","todosArr","todoIdArray","Math","max","newTodos","App","useState","todoTitle","setTodoTitle","selectedUserId","setSelectedUserId","hasTitleError","setHasTitleError","hasUserError","setHasUserError","setTodos","updatedTodo","action","method","onSubmit","event","preventDefault","type","placeholder","value","pattern","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c059003d.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': todo.completed,\n      },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import { FormEvent, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './components/types/User';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './components/types/Todo';\n\nconst getUserById = (userId: number): User | null => {\n  const foundedUser = usersFromServer.find(user => user.id === userId);\n\n  return foundedUser || null;\n};\n\nconst newTodoId = (todosArr: Todo[]): number => {\n  const todoIdArray = todosArr.map(todo => todo.id);\n  const newId = Math.max(...todoIdArray) + 1;\n\n  return newId;\n};\n\nconst newTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todoTitle, setTodoTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>(newTodos);\n\n  const updatedTodo: Todo = {\n    id: newTodoId(todos),\n    userId: selectedUserId,\n    title: todoTitle,\n    completed: false,\n    user: getUserById(selectedUserId),\n  };\n\n  const clearForm = () => {\n    setTodoTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!todoTitle) {\n      setHasTitleError(true);\n    }\n\n    if (!selectedUserId) {\n      setHasUserError(true);\n    }\n\n    if (todoTitle && selectedUserId !== 0) {\n      setTodos([...todos, updatedTodo]);\n      clearForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Please enter a title\"\n              data-cy=\"titleInput\"\n              value={todoTitle}\n              pattern=\"^[a-zA-ZА-Яа-яЁё0-9\\s]+$\"\n              title=\"Title should contain RU or EN letters, spaces and digits\"\n              onChange={event => {\n                setTodoTitle(event.target.value);\n                setHasTitleError(false);\n              }}\n            />\n          </label>\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div\n          className=\"field\"\n        >\n          <label>\n            User:\n            <select\n              name=\"user\"\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={event => {\n                setSelectedUserId(+event.target.value);\n                setHasUserError(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(({ id, name }) => (\n                <option value={id} key={id}>{name}</option>\n              ))}\n            </select>\n            {hasUserError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}